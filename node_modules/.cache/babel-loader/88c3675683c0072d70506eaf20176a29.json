{"ast":null,"code":"var _jsxFileName = \"/Users/wubs/blackbeard/black-beard/src/Components/Dashboard/Sheets.js\";\nimport React, { Component } from \"react\";\nimport ReactGoogleSheets from \"react-google-sheets\";\n\nclass DataComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sheetLoaded: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ReactGoogleSheets, {\n      clientId: \"1057185156415-003p8pocgdi174iolkvvd9r04edt1o37.apps.googleusercontent.com\",\n      apiKey: \"q0xCHcTsYv-j_cKCPZib4wT5\",\n      spreadsheetId: \"1D9v79K5LIshzIGYnptyMxFavRWkjRbKoD1qzg16Mn_4\",\n      afterLoading: () => this.setState({\n        sheetLoaded: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, this.state.sheetLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, console.log(\"Your sheet data : \", this.props.getSheetsData({})), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.updateCell(\"sheet02\", // sheetName\n        \"E\", // column\n        13, // row\n        \"Apple\", // value\n        null, // successCallback\n        error => {\n          console.log(\"error\", error);\n        } // errorCallback\n        );\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"update cell!\")) : \"loading...\");\n  }\n\n}\n\nexport default ReactGoogleSheets.connect(DataComponent);","map":{"version":3,"sources":["/Users/wubs/blackbeard/black-beard/src/Components/Dashboard/Sheets.js"],"names":["React","Component","ReactGoogleSheets","DataComponent","constructor","props","state","sheetLoaded","render","setState","console","log","getSheetsData","updateCell","error","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,iBAAD;AACE,MAAA,QAAQ,EACN,2EAFJ;AAIE,MAAA,MAAM,EAAE,0BAJV;AAKE,MAAA,aAAa,EAAE,8CALjB;AAME,MAAA,YAAY,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAAd,CANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,KAAKD,KAAL,CAAWC,WAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGG,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKN,KAAL,CAAWO,aAAX,CAAyB,EAAzB,CAAlC,CAFH,eAIE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKP,KAAL,CAAWQ,UAAX,CACE,SADF,EACa;AACX,WAFF,EAEO;AACL,UAHF,EAGM;AACJ,eAJF,EAIW;AACT,YALF,EAKQ;AACLC,QAAAA,KAAD,IAAW;AACTJ,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB;AACD,SARH,CAQI;AARJ;AAUD,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADD,GAuBC,YA/BJ,CADF;AAoCD;;AA5CmC;;AA+CtC,eAAeZ,iBAAiB,CAACa,OAAlB,CAA0BZ,aAA1B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ReactGoogleSheets from \"react-google-sheets\";\n\nclass DataComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sheetLoaded: false,\n    };\n  }\n  render() {\n    return (\n      <ReactGoogleSheets\n        clientId={\n          \"1057185156415-003p8pocgdi174iolkvvd9r04edt1o37.apps.googleusercontent.com\"\n        }\n        apiKey={\"q0xCHcTsYv-j_cKCPZib4wT5\"}\n        spreadsheetId={\"1D9v79K5LIshzIGYnptyMxFavRWkjRbKoD1qzg16Mn_4\"}\n        afterLoading={() => this.setState({ sheetLoaded: true })}\n      >\n        {this.state.sheetLoaded ? (\n          <div>\n            {/* Access Data */}\n            {console.log(\"Your sheet data : \", this.props.getSheetsData({}))}\n            {/* Update Data */}\n            <button\n              onClick={() => {\n                this.props.updateCell(\n                  \"sheet02\", // sheetName\n                  \"E\", // column\n                  13, // row\n                  \"Apple\", // value\n                  null, // successCallback\n                  (error) => {\n                    console.log(\"error\", error);\n                  } // errorCallback\n                );\n              }}\n            >\n              update cell!\n            </button>\n          </div>\n        ) : (\n          \"loading...\"\n        )}\n      </ReactGoogleSheets>\n    );\n  }\n}\n\nexport default ReactGoogleSheets.connect(DataComponent);\n"]},"metadata":{},"sourceType":"module"}